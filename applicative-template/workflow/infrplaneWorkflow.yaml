apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: build-infrplane-${{values.clusterName}}
  namespace: argo
  labels:
    project-id: loki
    cluster-name: ${{values.clusterName}}
spec:
  entrypoint: main
  serviceAccountName: argo-workflows-loki-sa
  volumes:
    - name: variables-volume
      configMap:
        name: variables-cm-${{values.clusterName}}
        items:
          - key: variables.json
            path: variables.json
    - name: shared-volume-infrplane
      persistentVolumeClaim:
        claimName: loki-cnoe-infrplane-${{values.clusterName}}
  templates:
    - name: main
      steps:
        - - name: create-pvc
            template: infrplane-create-pvc
        - - name: pull
            template: infrplane-pull-step
        - - name: customization
            template: infrplane-customization-step
        - - name: deploy
            template: infrplane-deploy-step
        - - name: test
            template: infrplane-test-step
        - - name: delete-pvc
            template: infrplane-delete-pvc

    # definition of the create-vpc step
    - name: infrplane-create-pvc
      resource:
        action: apply
        manifest: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: loki-cnoe-infrplane-${{values.clusterName}}
            namespace: argo
          spec:
            storageClassName: mygp2-delete
            accessModes: ['ReadWriteOnce']
            resources:
              requests:
                storage: 10Gi
    # definition of the pull step
    - name: infrplane-pull-step
      volumes:
        - name: shared-volume-infrplane
          persistentVolumeClaim:
            claimName: loki-cnoe-infrplane-${{values.clusterName}}
      container:
        image: 523753954008.dkr.ecr.eu-west-1.amazonaws.com/intership-cnoe-loki/infrplane-pull
        volumeMounts:
          - name: shared-volume-infrplane
            mountPath: /shared
          - name: variables-volume
            mountPath: /etc/config
        env:
          - name: GITHUB_REPO
            value: "CNOE-ORG-TEST/${{values.clusterName}}Infrplane"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token-cnoeorg-secret
                key: GITHUB_TOKEN

    # definition of the customization step
    - name: infrplane-customization-step
      volumes:
        - name: shared-volume-infrplane
          persistentVolumeClaim:
            claimName: loki-cnoe-infrplane-${{values.clusterName}}
      container:
        image: 523753954008.dkr.ecr.eu-west-1.amazonaws.com/intership-cnoe-loki/infrplane-customization
        volumeMounts:
          - name: shared-volume-infrplane
            mountPath: /shared
        env:
          - name: GITHUB_ORG
            value: "CNOE-ORG-TEST"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token-cnoeorg-secret
                key: GITHUB_TOKEN

    # definition of the deploy step
    - name: infrplane-deploy-step
      volumes:
        - name: shared-volume-infrplane
          persistentVolumeClaim:
            claimName: loki-cnoe-infrplane-${{values.clusterName}}
      container:
        image: 523753954008.dkr.ecr.eu-west-1.amazonaws.com/intership-cnoe-loki/infrplane-deploy
        volumeMounts:
          - name: shared-volume-infrplane
            mountPath: /shared
        env:
          - name: GITHUB_ORG
            value: "CNOE-ORG-TEST"
          - name: GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: github-token-cnoeorg-secret
                key: GITHUB_TOKEN

    # definition of the test step
    - name: infrplane-test-step
      volumes:
        - name: shared-volume-infrplane
          persistentVolumeClaim:
            claimName: loki-cnoe-infrplane-${{values.clusterName}}
      container:
        image: 523753954008.dkr.ecr.eu-west-1.amazonaws.com/intership-cnoe-loki/infrplane-test
        volumeMounts:
          - name: shared-volume-infrplane
            mountPath: /shared

    # definition of the delete-vpc step
    - name: infrplane-delete-pvc
      resource:
        action: delete
        manifest: |
          apiVersion: v1
          kind: PersistentVolumeClaim
          metadata:
            name: loki-cnoe-infrplane-${{values.clusterName}}
            namespace: argo
          spec:
            storageClassName: mygp2-delete
            accessModes: ['ReadWriteOnce']
            resources:
              requests:
                storage: 10Gi
